{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madko\\\\Downloads\\\\Keycloack_login\\\\working_1\\\\payco-auth\\\\src\\\\pages\\\\VerifyEmail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyEmail = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const [message, setMessage] = useState(\"Verifying your email...\");\n  useEffect(() => {\n    const verifyEmail = async () => {\n      const token = searchParams.get(\"key\"); // Get token from URL\n\n      if (!token) {\n        setMessage(\"Invalid verification link.\");\n        return;\n      }\n      try {\n        const response = await axios.post(\"http://localhost:5000/api/auth/verify-email\", {\n          token\n        });\n        setMessage(response.data.message);\n\n        // Redirect user to login after 3 seconds\n        setTimeout(() => {\n          navigate(\"/login\");\n        }, 3000);\n      } catch (error) {\n        setMessage(\"Email verification failed. Try again.\");\n        console.error(\"ðŸ”´ Verification Error:\", error);\n      }\n    };\n    verifyEmail();\n  }, [searchParams, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Email Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(VerifyEmail, \"ki1ZvddHCubO15LsIRMrLygp4J4=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = VerifyEmail;\nexport default VerifyEmail;\nvar _c;\n$RefreshReg$(_c, \"VerifyEmail\");","map":{"version":3,"names":["React","useEffect","useState","useSearchParams","useNavigate","axios","jsxDEV","_jsxDEV","VerifyEmail","_s","searchParams","navigate","message","setMessage","verifyEmail","token","get","response","post","data","setTimeout","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/madko/Downloads/Keycloack_login/working_1/payco-auth/src/pages/VerifyEmail.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst VerifyEmail = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n  const [message, setMessage] = useState(\"Verifying your email...\");\r\n\r\n  useEffect(() => {\r\n    const verifyEmail = async () => {\r\n      const token = searchParams.get(\"key\"); // Get token from URL\r\n\r\n      if (!token) {\r\n        setMessage(\"Invalid verification link.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5000/api/auth/verify-email\", {\r\n          token,\r\n        });\r\n\r\n        setMessage(response.data.message);\r\n\r\n        // Redirect user to login after 3 seconds\r\n        setTimeout(() => {\r\n          navigate(\"/login\");\r\n        }, 3000);\r\n      } catch (error) {\r\n        setMessage(\"Email verification failed. Try again.\");\r\n        console.error(\"ðŸ”´ Verification Error:\", error);\r\n      }\r\n    };\r\n\r\n    verifyEmail();\r\n  }, [searchParams, navigate]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Email Verification</h2>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerifyEmail;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,EAAEC,WAAW,QAAQ,kBAAkB;AAC/D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,CAAC,GAAGP,eAAe,CAAC,CAAC;EACxC,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,yBAAyB,CAAC;EAEjED,SAAS,CAAC,MAAM;IACd,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,KAAK,GAAGL,YAAY,CAACM,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;;MAEvC,IAAI,CAACD,KAAK,EAAE;QACVF,UAAU,CAAC,4BAA4B,CAAC;QACxC;MACF;MAEA,IAAI;QACF,MAAMI,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,6CAA6C,EAAE;UAC/EH;QACF,CAAC,CAAC;QAEFF,UAAU,CAACI,QAAQ,CAACE,IAAI,CAACP,OAAO,CAAC;;QAEjC;QACAQ,UAAU,CAAC,MAAM;UACfT,QAAQ,CAAC,QAAQ,CAAC;QACpB,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdR,UAAU,CAAC,uCAAuC,CAAC;QACnDS,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDP,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACJ,YAAY,EAAEC,QAAQ,CAAC,CAAC;EAE5B,oBACEJ,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BpB,OAAA;MAAAgB,QAAA,EAAIX;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV,CAAC;AAAClB,EAAA,CAxCID,WAAW;EAAA,QACQL,eAAe,EACrBC,WAAW;AAAA;AAAAwB,EAAA,GAFxBpB,WAAW;AA0CjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}