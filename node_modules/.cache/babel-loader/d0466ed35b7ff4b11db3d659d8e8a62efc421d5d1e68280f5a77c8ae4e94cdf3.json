{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { useKeycloak } from './useKeycloak';\n/**\n * An HOC which injects the `keycloak` instance and the `keycloakInitialized` flag as props.\n *\n * @deprecated Please migrate to useKeycloak hook where/when possible.\n */\nexport function withKeycloak(Component) {\n  return function WrappedComponent(props) {\n    var _a = useKeycloak(),\n      keycloak = _a.keycloak,\n      initialized = _a.initialized;\n    return React.createElement(Component, __assign({}, props, {\n      keycloakInitialized: initialized,\n      keycloak: keycloak\n    }));\n  };\n}\n//# sourceMappingURL=withKeycloak.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}