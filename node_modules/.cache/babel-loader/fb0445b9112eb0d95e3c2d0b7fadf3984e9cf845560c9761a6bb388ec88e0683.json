{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madko\\\\Downloads\\\\Keycloack_login\\\\working_1\\\\payco-auth\\\\src\\\\pages\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const token = searchParams.get(\"token\");\n  const navigate = useNavigate(); // Hook to navigate to login\n\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const handleResetPassword = async () => {\n    if (newPassword !== confirmPassword) {\n      setMessage(\"Passwords do not match!\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/auth/reset-password\", {\n        token,\n        newPassword\n      });\n      setMessage(response.data.message);\n\n      // If password reset is successful, redirect to login after 3 seconds\n      if (response.data.success) {\n        setTimeout(() => {\n          navigate(\"/login\");\n        }, 3000);\n      }\n    } catch (error) {\n      setMessage(\"Failed to reset password. Try again.\");\n      console.error(\"ðŸ”´ Reset Password Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"New Password\",\n      value: newPassword,\n      onChange: e => setNewPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleResetPassword,\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"rYtKjozO+zajJ/BOId1AHqtlb3A=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useSearchParams","useNavigate","axios","jsxDEV","_jsxDEV","ResetPassword","_s","searchParams","token","get","navigate","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","handleResetPassword","response","post","data","success","setTimeout","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/madko/Downloads/Keycloack_login/working_1/payco-auth/src/pages/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst ResetPassword = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const token = searchParams.get(\"token\");\r\n  const navigate = useNavigate(); // Hook to navigate to login\r\n\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleResetPassword = async () => {\r\n    if (newPassword !== confirmPassword) {\r\n      setMessage(\"Passwords do not match!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/auth/reset-password\", {\r\n        token, \r\n        newPassword,\r\n      });\r\n\r\n      setMessage(response.data.message);\r\n\r\n      // If password reset is successful, redirect to login after 3 seconds\r\n      if (response.data.success) {\r\n        setTimeout(() => {\r\n          navigate(\"/login\");\r\n        }, 3000);\r\n      }\r\n    } catch (error) {\r\n      setMessage(\"Failed to reset password. Try again.\");\r\n      console.error(\"ðŸ”´ Reset Password Error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Reset Password</h2>\r\n      <input \r\n        type=\"password\" \r\n        placeholder=\"New Password\" \r\n        value={newPassword} \r\n        onChange={(e) => setNewPassword(e.target.value)} \r\n      />\r\n      <input \r\n        type=\"password\" \r\n        placeholder=\"Confirm Password\" \r\n        value={confirmPassword} \r\n        onChange={(e) => setConfirmPassword(e.target.value)} \r\n      />\r\n      <button onClick={handleResetPassword}>Reset Password</button>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}