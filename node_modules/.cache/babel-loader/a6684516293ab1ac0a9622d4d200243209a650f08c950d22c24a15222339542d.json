{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madko\\\\Downloads\\\\Keycloack_login\\\\working_1\\\\payco-auth\\\\src\\\\index.js\";\n// import React from \"react\";\n// import ReactDOM from \"react-dom/client\";\n// import { ReactKeycloakProvider } from \"@react-keycloak/web\";\n// import keycloak from \"./keycloak\";\n// import App from \"./App\";\n\n// // âœ… Load token & refresh token from storage\n// const token = localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\");\n// const refreshToken = localStorage.getItem(\"refreshToken\") || sessionStorage.getItem(\"refreshToken\");\n\n// const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n// root.render(\n//   <ReactKeycloakProvider\n//     authClient={keycloak}\n//     initOptions={{\n//       onLoad: \"check-sso\",\n//       silentCheckSsoRedirectUri: window.location.origin + \"/silent-check-sso.html\",\n//       checkLoginIframe: true,\n//       token,   // âœ… Pass stored token\n//       refreshToken,  // âœ… Pass stored refresh token\n//     }}\n//     onEvent={(event, error) => {\n//       console.log(\"ðŸŸ¡ Keycloak Event:\", event);\n//       if (event === \"onAuthSuccess\") {\n//         console.log(\"âœ… Keycloak authentication successful!\");\n//       }\n//       if (event === \"onAuthError\") {\n//         console.error(\"ðŸ”´ Keycloak authentication error:\", error);\n//       }\n//     }}\n//   >\n//     <App />\n//   </ReactKeycloakProvider>\n// );\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { ReactKeycloakProvider } from \"@react-keycloak/web\";\nimport keycloak from \"./keycloak\";\nimport App from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(ReactKeycloakProvider, {\n  authClient: keycloak,\n  initOptions: {\n    onLoad: \"login-required\",\n    // Forces login\n    checkLoginIframe: false,\n    // Fix iframe issues\n    pkceMethod: \"S256\" // Fix for strict Keycloak servers\n  },\n  onEvent: (event, error) => {\n    console.log(\"ðŸŸ¡ Keycloak Event:\", event);\n    if (event === \"onInitError\") {\n      console.error(\"ðŸ”´ Keycloak failed to initialize!\", error);\n    }\n    if (event === \"onAuthSuccess\") {\n      console.log(\"âœ… Keycloak authentication successful!\");\n    }\n  },\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","ReactKeycloakProvider","keycloak","App","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","authClient","initOptions","onLoad","checkLoginIframe","pkceMethod","onEvent","event","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/madko/Downloads/Keycloack_login/working_1/payco-auth/src/index.js"],"sourcesContent":["// import React from \"react\";\n// import ReactDOM from \"react-dom/client\";\n// import { ReactKeycloakProvider } from \"@react-keycloak/web\";\n// import keycloak from \"./keycloak\";\n// import App from \"./App\";\n\n// // âœ… Load token & refresh token from storage\n// const token = localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\");\n// const refreshToken = localStorage.getItem(\"refreshToken\") || sessionStorage.getItem(\"refreshToken\");\n\n// const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n// root.render(\n//   <ReactKeycloakProvider\n//     authClient={keycloak}\n//     initOptions={{\n//       onLoad: \"check-sso\",\n//       silentCheckSsoRedirectUri: window.location.origin + \"/silent-check-sso.html\",\n//       checkLoginIframe: true,\n//       token,   // âœ… Pass stored token\n//       refreshToken,  // âœ… Pass stored refresh token\n//     }}\n//     onEvent={(event, error) => {\n//       console.log(\"ðŸŸ¡ Keycloak Event:\", event);\n//       if (event === \"onAuthSuccess\") {\n//         console.log(\"âœ… Keycloak authentication successful!\");\n//       }\n//       if (event === \"onAuthError\") {\n//         console.error(\"ðŸ”´ Keycloak authentication error:\", error);\n//       }\n//     }}\n//   >\n//     <App />\n//   </ReactKeycloakProvider>\n// );\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { ReactKeycloakProvider } from \"@react-keycloak/web\";\nimport keycloak from \"./keycloak\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <ReactKeycloakProvider\n    authClient={keycloak}\n    initOptions={{\n      onLoad: \"login-required\",  // Forces login\n      checkLoginIframe: false,   // Fix iframe issues\n      pkceMethod: \"S256\",        // Fix for strict Keycloak servers\n    }}\n    onEvent={(event, error) => {\n      console.log(\"ðŸŸ¡ Keycloak Event:\", event);\n      if (event === \"onInitError\") {\n        console.error(\"ðŸ”´ Keycloak failed to initialize!\", error);\n      }\n      if (event === \"onAuthSuccess\") {\n        console.log(\"âœ… Keycloak authentication successful!\");\n      }\n    }}\n  >\n    <App />\n  </ReactKeycloakProvider>\n);\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,qBAAqB,QAAQ,qBAAqB;AAC3D,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,IAAI,GAAGN,QAAQ,CAACO,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTL,OAAA,CAACJ,qBAAqB;EACpBU,UAAU,EAAET,QAAS;EACrBU,WAAW,EAAE;IACXC,MAAM,EAAE,gBAAgB;IAAG;IAC3BC,gBAAgB,EAAE,KAAK;IAAI;IAC3BC,UAAU,EAAE,MAAM,CAAS;EAC7B,CAAE;EACFC,OAAO,EAAEA,CAACC,KAAK,EAAEC,KAAK,KAAK;IACzBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,KAAK,CAAC;IACxC,IAAIA,KAAK,KAAK,aAAa,EAAE;MAC3BE,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D;IACA,IAAID,KAAK,KAAK,eAAe,EAAE;MAC7BE,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;IACtD;EACF,CAAE;EAAAC,QAAA,eAEFhB,OAAA,CAACF,GAAG;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACc,CACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}