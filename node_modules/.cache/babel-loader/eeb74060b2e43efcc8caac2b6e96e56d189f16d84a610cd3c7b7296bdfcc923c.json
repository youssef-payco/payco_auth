{"ast":null,"code":"import axios from \"axios\";\nconst BACKEND_API_URL = \"http://localhost:5000/api/auth\"; // Adjust for production\n\nexport const useAuth = () => {\n  const login = async (email, password, rememberMe) => {\n    try {\n      console.log(\"ðŸ”¹ Logging in via backend:\", email);\n\n      // Call backend API for login\n      const response = await axios.post(`${BACKEND_API_URL}/login`, {\n        email,\n        password\n      });\n      console.log(\"âœ… Backend Login Response:\", response.data);\n      const {\n        token,\n        refresh_token\n      } = response.data;\n      if (!token || !refresh_token) {\n        console.error(\"ðŸ”´ No token received:\", response.data);\n        throw new Error(\"Login failed, no token received.\");\n      }\n      if (rememberMe) {\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"refreshToken\", refresh_token);\n      } else {\n        sessionStorage.setItem(\"token\", token);\n        sessionStorage.setItem(\"refreshToken\", refresh_token);\n      }\n      console.log(\"âœ… Tokens stored successfully.\");\n      window.location.href = \"/dashboard\";\n      return {\n        token,\n        refresh_token\n      };\n    } catch (error) {\n      var _error$response;\n      console.error(\"ðŸ”´ Login failed:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw error;\n    }\n  };\n\n  // ðŸ”¹ **Signup (Calls Your Backend, Not Keycloak Directly)**\n  const signup = async (email, username, firstName, lastName, password) => {\n    try {\n      const response = await axios.post(`${BACKEND_API_URL}/signup`, {\n        email,\n        username,\n        firstName,\n        lastName,\n        password\n      });\n      console.log(\"âœ… Signup successful:\", response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      console.error(\"ðŸ”´ Signup failed:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      throw error;\n    }\n  };\n\n  // ðŸ”¹ **Forgot Password (Calls Your Backend)**\n  const forgotPassword = async email => {\n    try {\n      await axios.post(`${BACKEND_API_URL}/forgot-password`, {\n        email\n      });\n      return \"Password reset email sent!\";\n    } catch (error) {\n      console.error(\"Forgot password failed:\", error);\n      throw error;\n    }\n  };\n\n  // ðŸ”¹ **Logout (Clear Tokens & Redirect)**\n  const logout = async () => {\n    try {\n      const refreshToken = localStorage.getItem(\"refreshToken\") || sessionStorage.getItem(\"refreshToken\");\n      if (!refreshToken) {\n        console.log(\"ðŸ”¹ No refresh token found. Clearing local session.\");\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"refreshToken\");\n        sessionStorage.removeItem(\"token\");\n        sessionStorage.removeItem(\"refreshToken\");\n        window.location.href = \"/login\";\n        return;\n      }\n      console.log(\"ðŸ”¹ Logging out user via backend...\");\n      await axios.post(`${BACKEND_API_URL}/logout`, {\n        refreshToken\n      });\n\n      // âœ… Clear session after logout\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"refreshToken\");\n      sessionStorage.removeItem(\"token\");\n      sessionStorage.removeItem(\"refreshToken\");\n      window.location.href = \"/login\"; // Redirect after logout\n    } catch (error) {\n      console.error(\"ðŸ”´ Logout failed:\", error);\n      window.location.href = \"/login\"; // Ensure user is logged out even if backend fails\n    }\n  };\n  return {\n    login,\n    signup,\n    forgotPassword,\n    logout\n  };\n};","map":{"version":3,"names":["axios","BACKEND_API_URL","useAuth","login","email","password","rememberMe","console","log","response","post","data","token","refresh_token","error","Error","localStorage","setItem","sessionStorage","window","location","href","_error$response","message","signup","username","firstName","lastName","_error$response2","forgotPassword","logout","refreshToken","getItem","removeItem"],"sources":["C:/Users/madko/Downloads/Keycloack_login/working_1/payco-auth/src/auth.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst BACKEND_API_URL = \"http://localhost:5000/api/auth\"; // Adjust for production\r\n\r\nexport const useAuth = () => {\r\n  const login = async (email, password, rememberMe) => {\r\n    try {\r\n      console.log(\"ðŸ”¹ Logging in via backend:\", email);\r\n\r\n      // Call backend API for login\r\n      const response = await axios.post(`${BACKEND_API_URL}/login`, { email, password });\r\n\r\n      console.log(\"âœ… Backend Login Response:\", response.data);\r\n\r\n      const { token, refresh_token } = response.data;\r\n\r\n      if (!token || !refresh_token) {\r\n        console.error(\"ðŸ”´ No token received:\", response.data);\r\n        throw new Error(\"Login failed, no token received.\");\r\n      }\r\n\r\n      if (rememberMe) {\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"refreshToken\", refresh_token);\r\n      } else {\r\n        sessionStorage.setItem(\"token\", token);\r\n        sessionStorage.setItem(\"refreshToken\", refresh_token);\r\n      }\r\n\r\n      console.log(\"âœ… Tokens stored successfully.\");\r\n      window.location.href = \"/dashboard\";\r\n\r\n      return { token, refresh_token };\r\n    } catch (error) {\r\n      console.error(\"ðŸ”´ Login failed:\", error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // ðŸ”¹ **Signup (Calls Your Backend, Not Keycloak Directly)**\r\n  const signup = async (email, username, firstName, lastName, password) => {\r\n    try {\r\n      const response = await axios.post(`${BACKEND_API_URL}/signup`, {\r\n        email,\r\n        username,\r\n        firstName,\r\n        lastName,\r\n        password,\r\n      });\r\n  \r\n      console.log(\"âœ… Signup successful:\", response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"ðŸ”´ Signup failed:\", error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n\r\n  // ðŸ”¹ **Forgot Password (Calls Your Backend)**\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      await axios.post(`${BACKEND_API_URL}/forgot-password`, { email });\r\n      return \"Password reset email sent!\";\r\n    } catch (error) {\r\n      console.error(\"Forgot password failed:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // ðŸ”¹ **Logout (Clear Tokens & Redirect)**\r\n  const logout = async () => {\r\n    try {\r\n      const refreshToken = localStorage.getItem(\"refreshToken\") || sessionStorage.getItem(\"refreshToken\");\r\n\r\n      if (!refreshToken) {\r\n        console.log(\"ðŸ”¹ No refresh token found. Clearing local session.\");\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"refreshToken\");\r\n        sessionStorage.removeItem(\"token\");\r\n        sessionStorage.removeItem(\"refreshToken\");\r\n        window.location.href = \"/login\";\r\n        return;\r\n      }\r\n\r\n      console.log(\"ðŸ”¹ Logging out user via backend...\");\r\n      await axios.post(`${BACKEND_API_URL}/logout`, { refreshToken });\r\n\r\n      // âœ… Clear session after logout\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"refreshToken\");\r\n      sessionStorage.removeItem(\"token\");\r\n      sessionStorage.removeItem(\"refreshToken\");\r\n\r\n      window.location.href = \"/login\"; // Redirect after logout\r\n    } catch (error) {\r\n      console.error(\"ðŸ”´ Logout failed:\", error);\r\n      window.location.href = \"/login\"; // Ensure user is logged out even if backend fails\r\n    }\r\n  };\r\n\r\n  return { login, signup, forgotPassword, logout };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}